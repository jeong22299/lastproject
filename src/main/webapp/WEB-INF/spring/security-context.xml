<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
			xmlns:security="http://www.springframework.org/schema/security"
			xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
			   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- customAccessDenied 처리 -->
	<bean id="customAccessDenied"
			class="com.sw.ddit.security.CustomAccessDeniedHandler"></bean>

<!-- 로그인 성공 처리자 -->
	<bean id="customLoginSuccess" 
			class="com.sw.ddit.security.CustomLoginSuccessHandler"></bean>
	<!-- 사용자가 정의한 비밀번호 암호화 처리기를 빈으로 등록 -->
	<bean id="customPasswordEncoder"
			class="com.sw.ddit.security.CustomNoOpPasswordEncoder"></bean>
	<!--  스프링 시큐리티 UserDetails를 구현한 클래스를 빈으로 등록. 우리들 테이블로서 인증/인가 처리하기 위함 -->
	<bean id="customUserDetailsService"  
			class="com.sw.ddit.security.CustomUserDetailsService"></bean>

	<!-- xmlns : xml namespace의 약자 -->
	<security:http>
		<!-- URI 패턴으로 접근 제한을 설정 -->
		<!-- 누구나 접근가능  permitAll -->
		<security:intercept-url pattern="/board/list" access="permitAll"/>
		<security:intercept-url pattern="/noti/*" access="permitAll"/>
		<security:intercept-url pattern="/security/*" access="permitAll"/>
		<security:intercept-url pattern="/dep/*" access="permitAll"/>
		<security:intercept-url pattern="/commu/*" access="permitAll"/> 
		
		<!-- 일반사원만 접근가능 ROLE_A01 -->
		<security:intercept-url pattern="/reference/personal" access="hasAnyRole('ROLE_A01','ROLE_A02')"/>
		<security:intercept-url pattern="/reference/company" access="hasAnyRole('ROLE_A01','ROLE_A02')"/>
		<security:intercept-url pattern="/reference/department" access="hasAnyRole('ROLE_A01','ROLE_A02')"/>
		<security:intercept-url pattern="/tree/tree" access="hasAnyRole('ROLE_A01','ROLE_A02')"/>
		<security:intercept-url pattern="/attendance/*" access="hasAnyRole('ROLE_A01','ROLE_A02')" />
		<security:intercept-url pattern="/zoom" access="hasAnyRole('ROLE_A01','ROLE_A02')"/>
		<security:intercept-url pattern="/todo/*" access="hasAnyRole('ROLE_A01','ROLE_A02')"/>
		<security:intercept-url pattern="/main/profile" access="hasAnyRole('ROLE_A01','ROLE_A02')"/>
		<security:intercept-url pattern="/calendar/*" access="hasAnyRole('ROLE_A01','ROLE_A02')"/>

		<!--  관리자만 접근가능 -->
		<security:intercept-url pattern="/notice/register" access="hasRole('ROLE_A03')"/>
		<security:intercept-url pattern="/create" access="hasRole('ROLE_A03')"/>
		<security:intercept-url pattern="/subpay/*" access="hasRole('ROLE_A03')"/>
		<security:intercept-url pattern="/employee/*" access="hasRole('ROLE_A03')"/>
		<security:intercept-url pattern="/department/*" access="hasRole('ROLE_A03')"/>
		<security:intercept-url pattern="/reference/companyAdmin" access="hasRole('ROLE_A03')"/>
		<security:intercept-url pattern="/chart/*" access="hasRole('ROLE_A03')"/>
		<security:intercept-url pattern="/account/*" access="hasRole('ROLE_A03')"/>

		
		<!-- 로그인한 사람만 접근 가능 -->		
		<security:intercept-url pattern="/main/main" access="hasAnyRole('ROLE_A01','ROLE_A02', 'ROLE_A03')"/>
		<security:intercept-url pattern="/reference/detail" access="hasAnyRole('ROLE_A01','ROLE_A02', 'ROLE_A03')"/>
		<security:intercept-url pattern="/approval/*" access="hasAnyRole('ROLE_A01','ROLE_A02', 'ROLE_A03')"/>
		<security:intercept-url pattern="/draft/*" access="hasAnyRole('ROLE_A01','ROLE_A02', 'ROLE_A03')"/>
		<security:intercept-url pattern="/mail/*" access="hasAnyRole('ROLE_A01','ROLE_A02', 'ROLE_A03')"/>
		
		<!-- 사용자가 정의한 로그인 페이지의 URI를 지정함 
				customLoginSuccess : 로그인 성공 처리자로 지정
		-->
		<security:form-login login-page="/security/signin" 
				authentication-success-handler-ref="customLoginSuccess" />  
		
		<!-- 접근 거부 처리자의 URI를 지정함 -->
		<security:access-denied-handler ref="customAccessDenied" />
		
		<!-- 데이터소스를 지정하고 테이블을 이용해서 기존 로그인 정보를 기록함(PERDIDTENT_LOGINS 테이블) -->
		<!-- 쿠키의 유효시간을 지정함(604800초 = 7일) -->
		<security:remember-me data-source-ref="dataSource" 
				token-validity-seconds="604800"/>
		
		<!-- 로그아웃 처리를 위한 URI를 지정하고, 로그아웃 한 후의 세션을 무효화 함 -->
		<security:logout logout-url="/logout" invalidate-session="true" logout-success-url="/main/main"
				delete-cookies="remember-me, JSESSION_ID"/> 
		
	</security:http>
	
	<!-- 인증 매니저(아이디, 비밀번호) -->
	<!-- noop ?
			: 스프링 시큐리티 5버전부터는 비밀번호 암호화 처리기를 반드시 이용하도록 변경됨
			암호화 처리기를 사용하지 않도록 noop 문자열을 비밀번호 앞에 사용함 
	 -->
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder ref="customPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>
	
</beans>   













